[{"C:\\portfolio\\todo-list\\src\\index.js":"1","C:\\portfolio\\todo-list\\src\\App.js":"2","C:\\portfolio\\todo-list\\src\\components\\CreateTodo.js":"3","C:\\portfolio\\todo-list\\src\\components\\Todos.js":"4","C:\\portfolio\\todo-list\\src\\components\\Notification.js":"5","C:\\portfolio\\todo-list\\src\\components\\Card.js":"6","C:\\portfolio\\todo-list\\src\\components\\CardHeading.js":"7","C:\\portfolio\\todo-list\\src\\components\\TodoSettings.js":"8","C:\\portfolio\\todo-list\\src\\components\\Sorter.js":"9","C:\\portfolio\\todo-list\\src\\components\\CardFooter.js":"10","C:\\portfolio\\todo-list\\src\\components\\Todo.js":"11","C:\\portfolio\\todo-list\\src\\components\\PriorityMenu.js":"12"},{"size":446,"mtime":1611293258003,"results":"13","hashOfConfig":"14"},{"size":3218,"mtime":1611292161979,"results":"15","hashOfConfig":"14"},{"size":1225,"mtime":1616640428055,"results":"16","hashOfConfig":"14"},{"size":1556,"mtime":1616742502334,"results":"17","hashOfConfig":"14"},{"size":1182,"mtime":1613699972717,"results":"18","hashOfConfig":"14"},{"size":1260,"mtime":1613699169419,"results":"19","hashOfConfig":"14"},{"size":532,"mtime":1613699966552,"results":"20","hashOfConfig":"14"},{"size":2297,"mtime":1616745981715,"results":"21","hashOfConfig":"14"},{"size":1725,"mtime":1616658569977,"results":"22","hashOfConfig":"14"},{"size":530,"mtime":1613699960493,"results":"23","hashOfConfig":"14"},{"size":3004,"mtime":1616742498200,"results":"24","hashOfConfig":"14"},{"size":1557,"mtime":1616740582923,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dwxpb7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\portfolio\\todo-list\\src\\index.js",[],["53","54"],"C:\\portfolio\\todo-list\\src\\App.js",[],"C:\\portfolio\\todo-list\\src\\components\\CreateTodo.js",[],"C:\\portfolio\\todo-list\\src\\components\\Todos.js",[],"C:\\portfolio\\todo-list\\src\\components\\Notification.js",[],"C:\\portfolio\\todo-list\\src\\components\\Card.js",[],"C:\\portfolio\\todo-list\\src\\components\\CardHeading.js",[],"C:\\portfolio\\todo-list\\src\\components\\TodoSettings.js",["55"],"C:\\portfolio\\todo-list\\src\\components\\Sorter.js",["56"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport iconSet from \"../img/selection.json\";\r\nimport IcomoonReact, { iconList } from \"icomoon-react\";\r\n\r\nconst StyledFilter = styled.div`\r\n  padding: 10px 25px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-family: Open Sans, sans-serif;\r\n  background: #d9d9d9;\r\n`\r\n\r\nconst StyledButtonCollection = styled.div`\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: transparent;\r\n  \r\n  height: 3rem;\r\n  width: 3rem;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.25rem;\r\n  margin: 0 .5rem;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  transition: all .1s;\r\n  \r\n  background-color: ${props => props.className === 'active' ? '#333' : 'transparent'};\r\n  color: ${props => props.className === 'active' ? 'white' : '#333'};\r\n  fill: ${props => props.className === 'active' ? 'white' : '#333'};\r\n\r\n  .icon {\r\n    width: 70%;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #333;\r\n    color: white;\r\n    fill: white;\r\n  }\r\n`\r\n\r\nconst Sorter = ({ sorter, setSorter }) => {  \r\n\r\n  return (\r\n    <StyledFilter>\r\n      <label>Sort by:</label>\r\n\r\n      <StyledButtonCollection>\r\n        <StyledButton className={sorter === 'priority' ? 'active' : ''} onClick={() => setSorter('priority')}>\r\n          !!!\r\n        </StyledButton>\r\n        <StyledButton className={sorter === 'due date' ? 'active' : ''} onClick={() => setSorter('due date')}>\r\n          <IcomoonReact className=\"icon\" iconSet={iconSet} icon=\"alarm\" />\r\n        </StyledButton>\r\n      </StyledButtonCollection>\r\n    </StyledFilter>\r\n  )\r\n}\r\n\r\nexport default Sorter","C:\\portfolio\\todo-list\\src\\components\\CardFooter.js",[],"C:\\portfolio\\todo-list\\src\\components\\Todo.js",["57"],"import React, { useState, useEffect } from 'react'\r\nimport TodoSettings from './TodoSettings'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { Transition } from 'react-transition-group'\r\nimport iconSet from \"../img/selection.json\";\r\nimport IcomoonReact, { iconList } from \"icomoon-react\";\r\n\r\nconst StyledList = styled.li`\r\n  margin: 0 auto;\r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-family: Arial;\r\n  font-size: 16px;\r\n  padding: 20px;\r\n  border-top: 1px solid black;\r\n  background: white;\r\n  \r\n  &:hover {\r\n    animation: ${props => !props.todo.completed ? css`${todoColourFade} 0.1s forwards` : ''};\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  margin: 0 .8rem 0 0;\r\n`\r\n\r\nconst todoColourFade = keyframes`\r\n  from {\r\n    background-color: white;\r\n  }\r\n\r\n  to {\r\n    background-color: #fafafa;\r\n  }\r\n`\r\n\r\nconst StyledTask = styled.span`\r\n  flex: 0 0 45%;\r\n  word-wrap: break-word;\r\n  text-decoration: ${props => props.todo.completed ? 'line-through' : ''}\r\n`\r\n\r\nconst StyledIconContainer = styled.div`\r\n  display: flex;\r\n  flex: 0 0 7%;\r\n  align-self: stretch;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  z-index: 2;\r\n  cursor: pointer;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -20px;\r\n    bottom: -20px;\r\n    left: -20px;\r\n    right: -21px;\r\n    transition: background-color .2s;\r\n  }\r\n\r\n  &:hover {\r\n    ::before {\r\n      background-color: red;\r\n    }\r\n\r\n    .icon {\r\n      fill: white;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledIcon = styled(IcomoonReact)`\r\n  fill: #333;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 60%;\r\n`\r\n\r\nconst StyledListAnimation = styled(StyledList)`\r\n  transition: 0.5s;\r\n  opacity: ${({ state, todo }) => \r\n    state === 'entering' \r\n    ? '0.1' \r\n    : state === 'entered' && todo.completed \r\n    ? '0.7' \r\n    : state === 'entered' \r\n    ? '1' \r\n    : '0' \r\n  };\r\n`\r\n\r\nconst Todo = (props) => {\r\n  \r\n  const [animateTodo, setAnimateTodo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!animateTodo) {\r\n      setAnimateTodo(true)\r\n    }\r\n  }, [animateTodo])\r\n  \r\n  return (\r\n    <Transition in={animateTodo} timeout={0}>\r\n      {(state) => (\r\n        <StyledListAnimation todo={props.todo} state={state}>\r\n          <StyledInput \r\n            type='checkbox' \r\n            onClick={() => props.toggleCompleted(props.todo.id)}\r\n            defaultChecked={ props.todo.completed ? true : false } \r\n          />\r\n          <StyledTask todo={props.todo}>{props.todo.task}</StyledTask>\r\n          <TodoSettings todo={props.todo} handlePriorityChange={props.handlePriorityChange} handleDueDateChange={props.handleDueDateChange} />\r\n          <StyledIconContainer onClick={() => props.handleTodoDelete(props.todo.id)}>\r\n            <StyledIcon className=\"icon\" iconSet={iconSet} icon=\"bin\"></StyledIcon>\r\n          </StyledIconContainer>\r\n        </StyledListAnimation>\r\n      )}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nexport default Todo;","C:\\portfolio\\todo-list\\src\\components\\PriorityMenu.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":11,"column":7,"nodeType":"64","messageId":"65","endLine":11,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":4,"column":24,"nodeType":"64","messageId":"65","endLine":4,"endColumn":32},{"ruleId":"62","severity":1,"message":"66","line":6,"column":24,"nodeType":"64","messageId":"65","endLine":6,"endColumn":32},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'StyledPriorityMenu' is assigned a value but never used.","Identifier","unusedVar","'iconList' is defined but never used.","no-global-assign","no-unsafe-negation"]