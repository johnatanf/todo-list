{"version":3,"sources":["components/Notification.js","components/CardHeading.js","components/CardFooter.js","components/Sorter.js","components/CreateTodo.js","components/PriorityMenu.js","components/TodoSettings.js","components/Todo.js","components/Todos.js","components/Card.js","App.js","index.js"],"names":["StyledContainer","styled","div","StyledNotification","StyledNotificationAnimation","state","Notification","notification","animateNotification","Transition","in","timeout","StyledCardHeading","CardHeading","StyledFooter","CardFooter","props","todos","filter","todo","completed","length","StyledFilter","StyledButtonCollection","StyledButton","button","className","Sorter","sorter","setSorter","onClick","iconSet","icon","StyledForm","form","StyledInput","input","CreateTodo","todoInput","setTodoInput","handleTodoSubmit","onSubmit","name","value","placeholder","onChange","event","target","autoComplete","type","StyledMenuContainer","StyledMenu","ul","StyledOption","li","PriorityMenu","handlePriorityChange","id","StyledTodoSettings","StyledTime","StyledPriorityButton","priority","TodoSettings","handleDueDateChange","defaultValue","dueDate","StyledList","css","todoColourFade","keyframes","StyledTask","span","StyledIconContainer","StyledIcon","IcomoonReact","StyledListAnimation","Todo","useState","animateTodo","setAnimateTodo","useEffect","toggleCompleted","defaultChecked","task","handleTodoDelete","Todos","sort","a","b","categories","indexA","indexOf","indexB","undefined","map","StyledCard","Card","App","setTodos","setNotification","notificationTimerId","setNotificationTimerId","setAnimateNotification","localStorage","getItem","JSON","parse","Array","setItem","stringify","flashNotification","clearTimeout","timerId","setTimeout","preventDefault","concat","uuid","editedTodo","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eede174.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Transition } from 'react-transition-group'\r\n\r\nconst StyledContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledNotification = styled.div`\r\n  width: 50%;\r\n  width: 250px;\r\n  padding: 10px 0;\r\n  box-shadow: 3px 3px 2px rgba(0, 0, 0, 0.5);\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 14px;\r\n  background: white;\r\n`\r\n\r\nconst StyledNotificationAnimation = styled(StyledNotification)`\r\n  transition: 0.5s;\r\n  margin: ${({ state }) => state === 'entering' || state === 'entered' ? '30px' : '-30px'} auto;\r\n  opacity: ${({ state }) => state === 'entering' || state === 'entered' ? '1' : '0'};\r\n`\r\n\r\nconst Notification = ({ notification, animateNotification }) => {\r\n  \r\n  return (\r\n    <StyledContainer>\r\n      <Transition in={animateNotification} timeout={500}>\r\n        {(state) => (\r\n          <StyledNotificationAnimation state={state}>\r\n            {notification}\r\n          </StyledNotificationAnimation>\r\n        )}\r\n      </Transition>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCardHeading = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #212121;\r\n  color: white;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 2em;\r\n  height: 2em;\r\n  padding-left: 25px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px 10px 0px 0px; \r\n`\r\n\r\nconst CardHeading = () => {\r\n  return (\r\n    <StyledCardHeading>\r\n      TODO LIST\r\n    </StyledCardHeading>\r\n  )\r\n}\r\n\r\nexport default CardHeading","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.div`\r\n  padding: 10px 25px;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 14px;\r\n  background: #212121;\r\n  color: white;\r\n  border-radius: 0px 0px 10px 10px;\r\n  text-align: left;\r\n`\r\n\r\nconst CardFooter = (props) => {\r\n  return (\r\n    <StyledFooter>\r\n      completed: {props.todos.filter(todo => todo.completed === true).length} out of {props.todos.length}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default CardFooter","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport iconSet from \"../img/selection.json\";\r\nimport IcomoonReact, { iconList } from \"icomoon-react\";\r\n\r\nconst StyledFilter = styled.div`\r\n  padding: 10px 25px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-family: Open Sans, sans-serif;\r\n  background: #d9d9d9;\r\n`\r\n\r\nconst StyledButtonCollection = styled.div`\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: transparent;\r\n  \r\n  height: 3rem;\r\n  width: 3rem;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.25rem;\r\n  margin: 0 .5rem;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  transition: all .1s;\r\n  \r\n  background-color: ${props => props.className === 'active' ? '#333' : 'transparent'};\r\n  color: ${props => props.className === 'active' ? 'white' : '#333'};\r\n  fill: ${props => props.className === 'active' ? 'white' : '#333'};\r\n\r\n  .icon {\r\n    width: 70%;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #333;\r\n    color: white;\r\n    fill: white;\r\n  }\r\n`\r\n\r\nconst Sorter = ({ sorter, setSorter }) => {  \r\n\r\n  return (\r\n    <StyledFilter>\r\n      <label>Sort by:</label>\r\n\r\n      <StyledButtonCollection>\r\n        <StyledButton className={sorter === 'priority' ? 'active' : ''} onClick={() => setSorter('priority')}>\r\n          !!!\r\n        </StyledButton>\r\n        <StyledButton className={sorter === 'due date' ? 'active' : ''} onClick={() => setSorter('due date')}>\r\n          <IcomoonReact className=\"icon\" iconSet={iconSet} icon=\"alarm\" />\r\n        </StyledButton>\r\n      </StyledButtonCollection>\r\n    </StyledFilter>\r\n  )\r\n}\r\n\r\nexport default Sorter","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  border-bottom: 1px solid black;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  flex: 1;\r\n  font-family: Open Sans, sans-serif;\r\n  font-size: 16px;\r\n  padding: 25px;\r\n  border: 0;\r\n  height: 50px;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    outline: 2px solid lightgrey;\r\n  }\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  flex: 0 0 50px;\r\n  border-radius: 0;\r\n  border: 0;\r\n  font-size: 32px;\r\n  font-family: 'Open Sans', sans-serif;\r\n  background-color: #296d98;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color .1s;\r\n\r\n  &:hover {\r\n    background-color: #1c4966;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #296d98;\r\n  }\r\n`\r\n\r\nconst CreateTodo = ({ todoInput, setTodoInput, handleTodoSubmit }) => {\r\n  \r\n  return (\r\n    <StyledForm onSubmit={handleTodoSubmit}>\r\n      <StyledInput \r\n        name='todoInput'\r\n        value={todoInput}\r\n        placeholder='Enter task here...'\r\n        onChange={event => setTodoInput(event.target.value)}\r\n        autoComplete='off'\r\n      />\r\n      <StyledButton type=\"submit\">+</StyledButton>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nexport default CreateTodo","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledMenuContainer = styled.div`\r\n  position: absolute;\r\n  width: 150px;\r\n  left: -130px;\r\n`\r\n\r\nconst StyledMenu = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style: none;\r\n  background-color: white;\r\n  width: 125px;\r\n  z-index: 100;\r\n  box-shadow: 2px 4px 10px rgba(0, 0, 0, .7);\r\n  cursor: pointer;\r\n\r\n  .icon {\r\n    font-weight: 800;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n\r\n  .high {\r\n    color: #ff4d4d;\r\n  }\r\n\r\n  .medium {\r\n    color: #ffb624;\r\n  }\r\n\r\n  .low {\r\n    color: #32a6a8;\r\n  }\r\n`\r\n\r\nconst StyledOption = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: .5rem 0;\r\n  color: black;\r\n  font-weight: 400;\r\n  font-size: .8rem;\r\n\r\n  .icon {\r\n    flex: 0 0 1.5rem;\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #333;\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst PriorityMenu = ({ todo, handlePriorityChange }) => {\r\n  return (\r\n    <StyledMenuContainer className=\"styled-menu-container\">\r\n      <StyledMenu className=\"styled-menu\">\r\n        <StyledOption onClick={() => handlePriorityChange(todo.id, 'high priority')}>\r\n          <span className=\"icon high\">!!!</span>\r\n          <span>high</span>\r\n        </StyledOption>\r\n        <StyledOption onClick={() => handlePriorityChange(todo.id, 'medium priority')}>\r\n          <span className=\"icon medium\">!!</span>\r\n          <span>medium</span>\r\n        </StyledOption>\r\n        <StyledOption onClick={() => handlePriorityChange(todo.id, 'low priority')}>\r\n          <span className=\"icon low\">!</span>\r\n          <span>low</span>\r\n        </StyledOption>\r\n      </StyledMenu>\r\n    </StyledMenuContainer>\r\n  )\r\n}\r\n\r\nexport default PriorityMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PriorityMenu from './PriorityMenu';\r\n\r\nconst StyledTodoSettings = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex: 1;\r\n`\r\n\r\nconst StyledTime = styled.input`\r\n  background: transparent;  \r\n  font-family: Open Sans, sans-serif;\r\n  font-size: 16px; \r\n  width: 100px;\r\n  border: 0;\r\n  position: relative;\r\n\r\n  &::-webkit-calendar-picker-indicator {\r\n    font-size: 18px;\r\n    position: absolute;\r\n    left: 35px;\r\n  }\r\n\r\n  &::-webkit-calendar-picker-indicator:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst StyledPriorityButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 20px;\r\n  position: relative;\r\n  font-family: 'Open Sans', sans-serif;\r\n  font-weight: 800;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  \r\n  color: ${({ priority }) => \r\n    priority === 'high priority'\r\n    ? '#ff4d4d'\r\n    : priority === 'medium priority'\r\n    ? '#ffb624'\r\n    : priority === 'low priority'\r\n    ? '#32a6a8'\r\n    : ''\r\n  };\r\n\r\n  .styled-menu-container {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:hover .styled-menu-container {\r\n    visibility: visible;\r\n  }\r\n`\r\n\r\nconst TodoSettings = ({ todo, handlePriorityChange, handleDueDateChange }) => {\r\n  \r\n  return (\r\n    <StyledTodoSettings>\r\n      <StyledPriorityButton priority={todo.priority}>\r\n        <PriorityMenu todo={todo} handlePriorityChange={handlePriorityChange} />\r\n          {\r\n            todo.priority === 'high priority'\r\n            ? '!!!'\r\n            : todo.priority === 'medium priority'\r\n            ? '!!'\r\n            : '!'\r\n          }\r\n      </StyledPriorityButton>\r\n      <StyledTime type='time' defaultValue={todo.dueDate} onChange={event => handleDueDateChange(todo.id, event.target.value)}/>\r\n    </StyledTodoSettings>\r\n  )\r\n}\r\n\r\nexport default TodoSettings","import React, { useState, useEffect } from 'react'\r\nimport TodoSettings from './TodoSettings'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { Transition } from 'react-transition-group'\r\nimport iconSet from \"../img/selection.json\";\r\nimport IcomoonReact, { iconList } from \"icomoon-react\";\r\n\r\nconst StyledList = styled.li`\r\n  margin: 0 auto;\r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-family: Arial;\r\n  font-size: 16px;\r\n  padding: 20px;\r\n  border-top: 1px solid black;\r\n  background: white;\r\n  \r\n  &:hover {\r\n    animation: ${props => !props.todo.completed ? css`${todoColourFade} 0.1s forwards` : ''};\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  margin: 0 .8rem 0 0;\r\n`\r\n\r\nconst todoColourFade = keyframes`\r\n  from {\r\n    background-color: white;\r\n  }\r\n\r\n  to {\r\n    background-color: #fafafa;\r\n  }\r\n`\r\n\r\nconst StyledTask = styled.span`\r\n  flex: 0 0 45%;\r\n  word-wrap: break-word;\r\n  text-decoration: ${props => props.todo.completed ? 'line-through' : ''}\r\n`\r\n\r\nconst StyledIconContainer = styled.div`\r\n  display: flex;\r\n  flex: 0 0 7%;\r\n  align-self: stretch;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  z-index: 2;\r\n  cursor: pointer;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -20px;\r\n    bottom: -20px;\r\n    left: -20px;\r\n    right: -21px;\r\n    transition: background-color .2s;\r\n  }\r\n\r\n  &:hover {\r\n    ::before {\r\n      background-color: red;\r\n    }\r\n\r\n    .icon {\r\n      fill: white;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledIcon = styled(IcomoonReact)`\r\n  fill: #333;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 60%;\r\n`\r\n\r\nconst StyledListAnimation = styled(StyledList)`\r\n  transition: 0.5s;\r\n  opacity: ${({ state, todo }) => \r\n    state === 'entering' \r\n    ? '0.1' \r\n    : state === 'entered' && todo.completed \r\n    ? '0.7' \r\n    : state === 'entered' \r\n    ? '1' \r\n    : '0' \r\n  };\r\n`\r\n\r\nconst Todo = (props) => {\r\n  \r\n  const [animateTodo, setAnimateTodo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!animateTodo) {\r\n      setAnimateTodo(true)\r\n    }\r\n  }, [animateTodo])\r\n  \r\n  return (\r\n    <Transition in={animateTodo} timeout={0}>\r\n      {(state) => (\r\n        <StyledListAnimation todo={props.todo} state={state}>\r\n          <StyledInput \r\n            type='checkbox' \r\n            onClick={() => props.toggleCompleted(props.todo.id)}\r\n            defaultChecked={ props.todo.completed ? true : false } \r\n          />\r\n          <StyledTask todo={props.todo}>{props.todo.task}</StyledTask>\r\n          <TodoSettings todo={props.todo} handlePriorityChange={props.handlePriorityChange} handleDueDateChange={props.handleDueDateChange} />\r\n          <StyledIconContainer onClick={() => props.handleTodoDelete(props.todo.id)}>\r\n            <StyledIcon className=\"icon\" iconSet={iconSet} icon=\"bin\"></StyledIcon>\r\n          </StyledIconContainer>\r\n        </StyledListAnimation>\r\n      )}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst Todos = (props) => {\r\n\r\n  const sortByPriority = (a, b) => {\r\n    const categories = ['high priority', 'medium priority', 'low priority']\r\n    const indexA = categories.indexOf(a.priority)\r\n    const indexB = categories.indexOf(b.priority)\r\n    if (indexA > indexB) {\r\n      return 1\r\n    } else if (indexA < indexB) {\r\n      return -1 \r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const sortByDueDate = (a, b) => {\r\n    if (a.dueDate > b.dueDate) {\r\n      return 1 \r\n    } else if (a.dueDate < b.dueDate) {\r\n      return -1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const sortByCompleted = (a, b) => {\r\n    const categories = [true, false]\r\n    const indexA = categories.indexOf(a.completed)\r\n    const indexB = categories.indexOf(b.completed)\r\n    if (indexA > indexB) {\r\n      return -1\r\n    } else if (indexA < indexB) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <ul>\r\n      {props.todos\r\n        .sort(props.sorter === 'priority' ? sortByPriority : props.sorter === 'due date' ? sortByDueDate : undefined)\r\n        .sort(sortByCompleted)\r\n        .map(todo => (\r\n          <Todo \r\n            key={todo.id} \r\n            todo={todo}\r\n            handleTodoDelete={props.handleTodoDelete}\r\n            handlePriorityChange={props.handlePriorityChange}\r\n            handleDueDateChange={props.handleDueDateChange}\r\n            toggleCompleted={props.toggleCompleted}\r\n          />\r\n        )\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\nimport CardHeading from './CardHeading'\r\nimport CardFooter from './CardFooter'\r\nimport Sorter from './Sorter'\r\nimport CreateTodo from './CreateTodo'\r\nimport Todos from './Todos'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n  box-shadow: 5px 5px 2px rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px 10px 10px 10px;\r\n  margin: 80px auto 35px auto;\r\n  width: 45%;\r\n  min-width: 350px;\r\n  max-width: 400px;\r\n`\r\n\r\nconst Card = ({todos, todoInput, sorter, setSorter, setTodoInput, handleTodoSubmit, handleTodoDelete, handlePriorityChange, handleDueDateChange, toggleCompleted}) => {  \r\n  return (\r\n    <StyledCard>\r\n      <CardHeading />\r\n      <CreateTodo \r\n        todoInput={todoInput}\r\n        setTodoInput={setTodoInput}\r\n        handleTodoSubmit={handleTodoSubmit}\r\n      />\r\n      <Sorter \r\n        sorter={sorter}\r\n        setSorter={setSorter}\r\n      />\r\n      <Todos \r\n        todos={todos}\r\n        sorter={sorter} \r\n        handleTodoDelete={handleTodoDelete}\r\n        handlePriorityChange={handlePriorityChange}\r\n        handleDueDateChange={handleDueDateChange}\r\n        toggleCompleted={toggleCompleted}\r\n      />\r\n      <CardFooter todos={todos} /> \r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useState, useEffect } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport Notification from './components/Notification'\r\nimport Card from './components/Card'\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([])\r\n  const [todoInput, setTodoInput] = useState('')\r\n  const [notification, setNotification] = useState('')\r\n  const [notificationTimerId, setNotificationTimerId] = useState('')\r\n  const [animateNotification, setAnimateNotification] = useState(false)\r\n  const [sorter, setSorter] = useState('priority')  \r\n\r\n  useEffect(() => { // effect to retrieve todos if they already exist in local storage \r\n    const todos = localStorage.getItem('todos')\r\n    if(todos && JSON.parse(todos) instanceof Array) {\r\n      setTodos(JSON.parse(todos))\r\n    } else {\r\n      localStorage.setItem('todos', JSON.stringify([]))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => { // effect to save todos to storage whenever a change is made \r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const handleTodoSubmit = event => {\r\n    event.preventDefault()\r\n    if(todoInput) {\r\n      setTodos(todos.concat({\r\n        id: uuid(),\r\n        task: todoInput,\r\n        dueDate: '09:00',\r\n        priority: 'low priority',\r\n        completed: false\r\n      })) \r\n      setTodoInput('')\r\n      flashNotification('successfully created todo!')\r\n    } else {\r\n      flashNotification('the todo field cannot be blank')\r\n    }\r\n  }\r\n\r\n  const handleTodoDelete = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n    flashNotification('successfully deleted todo!')\r\n  }\r\n\r\n  const handlePriorityChange = (id, priority) => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.priority = priority\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const handleDueDateChange = (id, dueDate) => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.dueDate = dueDate\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const toggleCompleted = id => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.completed = !editedTodo.completed\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const flashNotification = notification => {\r\n    if(notificationTimerId) {\r\n      clearTimeout(notificationTimerId)\r\n    }\r\n    setNotification(notification)\r\n    setAnimateNotification(true)\r\n    const timerId = setTimeout(() => {\r\n      setNotification('')\r\n      setAnimateNotification(false)\r\n    }, 5000)\r\n    setNotificationTimerId(timerId)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification \r\n        notification={notification}\r\n        animateNotification={animateNotification}\r\n      />\r\n      <Card\r\n        todos={todos}\r\n        todoInput={todoInput}\r\n        sorter={sorter}\r\n        setSorter={setSorter}\r\n        setTodoInput={setTodoInput}\r\n        handleTodoSubmit={handleTodoSubmit}\r\n        handleTodoDelete={handleTodoDelete}\r\n        handlePriorityChange={handlePriorityChange}\r\n        handleDueDateChange={handleDueDateChange}\r\n        toggleCompleted={toggleCompleted}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}