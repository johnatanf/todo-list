{"version":3,"sources":["components/Notification.js","components/CardHeading.js","components/CardFooter.js","components/Sorter.js","components/CreateTodo.js","components/TodoSettings.js","components/Todos.js","components/Card.js","App.js","index.js"],"names":["StyledContainer","styled","div","StyledNotification","StyledNotificationAnimation","state","Notification","notification","animateNotification","Transition","in","timeout","StyledCardHeading","CardHeading","StyledFooter","CardFooter","props","todos","filter","todo","completed","length","StyledFilter","StyledSortMenu","select","Sorter","sorter","setSorter","defaultValue","onChange","event","target","value","StyledInput","input","CreateTodo","todoInput","setTodoInput","handleTodoSubmit","placeholders","onSubmit","name","placeholder","Math","floor","random","autoComplete","StyledTodoSettings","StyledPriorityMenu","StyledTime","Exclamation","i","priority","TodoSettings","handlePriorityChange","handleDueDateChange","className","id","type","dueDate","todoColourFade","keyframes","trashColourFade","StyledList","li","css","StyledListAnimation","StyledTask","span","StyledDelete","Todo","useState","animateTodo","setAnimateTodo","useEffect","onClick","toggleCompleted","defaultChecked","task","handleTodoDelete","Todos","sort","a","b","categories","indexA","indexOf","indexB","undefined","map","StyledCard","Card","App","setTodos","setNotification","notificationTimerId","setNotificationTimerId","setAnimateNotification","localStorage","getItem","JSON","parse","Array","setItem","stringify","flashNotification","clearTimeout","timerId","setTimeout","preventDefault","concat","uuid","editedTodo","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.179ebc28.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Transition } from 'react-transition-group'\r\n\r\nconst StyledContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledNotification = styled.div`\r\n  width: 50%;\r\n  width: 250px;\r\n  padding: 10px 0;\r\n  box-shadow: 3px 3px 2px rgba(0, 0, 0, 0.5);\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 14px;\r\n  background: white;\r\n`\r\n\r\nconst StyledNotificationAnimation = styled(StyledNotification)`\r\n  transition: 0.5s;\r\n  margin: ${({ state }) => state === 'entering' || state === 'entered' ? '30px' : '-30px'} auto;\r\n  opacity: ${({ state }) => state === 'entering' || state === 'entered' ? '1' : '0'};\r\n`\r\n\r\nconst Notification = ({ notification, animateNotification }) => {\r\n  \r\n  return (\r\n    <StyledContainer>\r\n      <Transition in={animateNotification} timeout={500}>\r\n        {(state) => (\r\n          <StyledNotificationAnimation state={state}>\r\n            {notification}\r\n          </StyledNotificationAnimation>\r\n        )}\r\n      </Transition>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCardHeading = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: #212121;\r\n  color: white;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 2em;\r\n  height: 2em;\r\n  padding-left: 25px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px 10px 0px 0px; \r\n`\r\n\r\nconst CardHeading = () => {\r\n  return (\r\n    <StyledCardHeading>\r\n      TODO LIST\r\n    </StyledCardHeading>\r\n  )\r\n}\r\n\r\nexport default CardHeading","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.div`\r\n  padding: 10px 25px;\r\n  font-family: Concert One, Open Sans, sans-serif;\r\n  font-size: 14px;\r\n  background: #212121;\r\n  color: white;\r\n  border-radius: 0px 0px 10px 10px;\r\n  text-align: left;\r\n`\r\n\r\nconst CardFooter = (props) => {\r\n  return (\r\n    <StyledFooter>\r\n      completed: {props.todos.filter(todo => todo.completed === true).length} out of {props.todos.length}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default CardFooter","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFilter = styled.div`\r\n  padding: 10px 25px;\r\n  display: flex;\r\n  flex-direction: reverse-column;\r\n  align-items: center;\r\n  font-family: Open Sans, sans-serif;\r\n  background: #d9d9d9;\r\n`\r\n\r\nconst StyledSortMenu = styled.select`\r\n  position: relative; \r\n  left: 10px;\r\n  font-family: Open Sans, sans-serif;\r\n  background: transparent;\r\n  border: 0;\r\n  font-size: 16px;\r\n  min-width: 75px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst Sorter = ({ sorter, setSorter }) => {  \r\n\r\n  return (\r\n    <StyledFilter>\r\n      <label>Sort by:</label>\r\n      <StyledSortMenu defaultValue={sorter} onChange={event => setSorter(event.target.value)}>\r\n        <option>priority</option>\r\n        <option>due date</option>\r\n      </StyledSortMenu>\r\n    </StyledFilter>\r\n  )\r\n}\r\n\r\nexport default Sorter","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  font-family: Open Sans, sans-serif;\r\n  font-size: 16px;\r\n  padding: 25px;\r\n  border: 0;\r\n  border-bottom: 1px solid black;\r\n  height: 50px;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    outline: 2px solid lightgrey;\r\n  }\r\n`\r\n\r\nconst CreateTodo = ({ todoInput, setTodoInput, handleTodoSubmit }) => {\r\n  \r\n  const placeholders = [\r\n    'Do the groceries...',\r\n  ]\r\n  \r\n  return (\r\n    <form onSubmit={handleTodoSubmit}>\r\n      <StyledInput \r\n        name='todoInput'\r\n        value={todoInput}\r\n        placeholder={placeholders[Math.floor(Math.random() * placeholders.length)]}\r\n        onChange={event => setTodoInput(event.target.value)}\r\n        autoComplete='off'\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CreateTodo","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledTodoSettings = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledPriorityMenu = styled.select`\r\n  font-family: Open Sans, sans-serif;\r\n  background: transparent;\r\n  border: 0;\r\n  font-size: 16px;\r\n  margin-bottom: 6px;\r\n  appearance: none;\r\n  min-width: 75px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst StyledTime = styled.input`\r\n  background: transparent;  \r\n  font-family: Open Sans, sans-serif;\r\n  font-size: 16px; \r\n  border: 0;\r\n  position: relative;\r\n  margin-top: 5px;\r\n\r\n  &::-webkit-calendar-picker-indicator {\r\n    font-size: 18px;\r\n    position: absolute;\r\n    left: 35px;\r\n  }\r\n\r\n  &::-webkit-calendar-picker-indicator:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst Exclamation = styled.i`\r\n  margin-right: 5px;\r\n  color: ${({ priority }) => \r\n    priority === 'high priority'\r\n    ? '#ff4d4d'\r\n    : priority === 'medium priority'\r\n    ? '#ffb624'\r\n    : priority === 'low priority'\r\n    ? '#32a6a8'\r\n    : ''\r\n  };\r\n`\r\n\r\nconst TodoSettings = ({ todo, handlePriorityChange, handleDueDateChange }) => {\r\n  return (\r\n    <StyledTodoSettings>\r\n      <div>\r\n        <Exclamation priority={todo.priority} className=\"fas fa-exclamation\"></Exclamation>\r\n        <StyledPriorityMenu defaultValue={todo.priority} onChange={event => handlePriorityChange(todo.id, event.target.value)}>\r\n          <option value='high priority'>high</option>\r\n          <option value='medium priority'>medium</option>\r\n          <option value='low priority'>low</option>\r\n        </StyledPriorityMenu>\r\n      </div>\r\n      <StyledTime type='time' defaultValue={todo.dueDate} onChange={event => handleDueDateChange(todo.id, event.target.value)}/>\r\n    </StyledTodoSettings>\r\n  )\r\n}\r\n\r\nexport default TodoSettings","import React, { useState, useEffect } from 'react'\r\nimport TodoSettings from './TodoSettings'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { Transition } from 'react-transition-group'\r\n\r\nconst todoColourFade = keyframes`\r\n  from {\r\n    background-color: white;\r\n  }\r\n\r\n  to {\r\n    background-color: #fafafa;\r\n  }\r\n`\r\n\r\nconst trashColourFade = keyframes`\r\n  from {\r\n    color: black;\r\n  }\r\n\r\n  to {\r\n    color: red;\r\n  }\r\n`\r\n\r\nconst StyledList = styled.li`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-family: Arial;\r\n  font-size: 16px;\r\n  padding: 20px;\r\n  border-top: 1px solid black;\r\n  background: white;\r\n  \r\n  &:hover {\r\n    animation: ${props => !props.todo.completed ? css`${todoColourFade} 0.1s forwards` : ''};\r\n  }\r\n`\r\n\r\nconst StyledListAnimation = styled(StyledList)`\r\n  transition: 0.5s;\r\n  opacity: ${({ state, todo }) => \r\n    state === 'entering' \r\n    ? '0.1' \r\n    : state === 'entered' && todo.completed \r\n    ? '0.7' \r\n    : state === 'entered' \r\n    ? '1' \r\n    : '0' \r\n  };\r\n`\r\n\r\nconst StyledTask = styled.span`\r\n  width: 50%;\r\n  word-wrap: break-word;\r\n  text-decoration: ${props => props.todo.completed ? 'line-through' : ''}\r\n`\r\n\r\nconst StyledDelete = styled.i`\r\n  &:hover {\r\n    animation: ${trashColourFade} 0.1s forwards;\r\n  }\r\n`\r\n\r\nconst Todo = (props) => {\r\n  \r\n  const [animateTodo, setAnimateTodo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(!animateTodo) {\r\n      setAnimateTodo(true)\r\n    }\r\n  }, [animateTodo])\r\n  \r\n  return (\r\n    <Transition in={animateTodo} timeout={0}>\r\n      {(state) => (\r\n        <StyledListAnimation todo={props.todo} state={state}>\r\n          <input \r\n            type='checkbox' \r\n            onClick={() => props.toggleCompleted(props.todo.id)}\r\n            defaultChecked={ props.todo.completed ? true : false } \r\n          />\r\n          <StyledTask todo={props.todo}>{props.todo.task}</StyledTask>\r\n          <TodoSettings todo={props.todo} handlePriorityChange={props.handlePriorityChange} handleDueDateChange={props.handleDueDateChange} />\r\n          <StyledDelete className=\"fas fa-trash-alt\" onClick={() => props.handleTodoDelete(props.todo.id)}>\r\n          </StyledDelete>\r\n        </StyledListAnimation>\r\n      )}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nconst Todos = (props) => {\r\n\r\n  const sortByPriority = (a, b) => {\r\n    const categories = ['high priority', 'medium priority', 'low priority']\r\n    const indexA = categories.indexOf(a.priority)\r\n    const indexB = categories.indexOf(b.priority)\r\n    if (indexA > indexB) {\r\n      return 1\r\n    } else if (indexA < indexB) {\r\n      return -1 \r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const sortByDueDate = (a, b) => {\r\n    if (a.dueDate > b.dueDate) {\r\n      return 1 \r\n    } else if (a.dueDate < b.dueDate) {\r\n      return -1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const sortByCompleted = (a, b) => {\r\n    const categories = [true, false]\r\n    const indexA = categories.indexOf(a.completed)\r\n    const indexB = categories.indexOf(b.completed)\r\n    if (indexA > indexB) {\r\n      return -1\r\n    } else if (indexA < indexB) {\r\n      return 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <ul>\r\n      {props.todos\r\n        .sort(props.sorter === 'priority' ? sortByPriority : props.sorter === 'due date' ? sortByDueDate : undefined)\r\n        .sort(sortByCompleted)\r\n        .map(todo => (\r\n          <Todo \r\n            key={todo.id} \r\n            todo={todo}\r\n            handleTodoDelete={props.handleTodoDelete}\r\n            handlePriorityChange={props.handlePriorityChange}\r\n            handleDueDateChange={props.handleDueDateChange}\r\n            toggleCompleted={props.toggleCompleted}\r\n          />\r\n        )\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\nimport CardHeading from './CardHeading'\r\nimport CardFooter from './CardFooter'\r\nimport Sorter from './Sorter'\r\nimport CreateTodo from './CreateTodo'\r\nimport Todos from './Todos'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n  box-shadow: 5px 5px 2px rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px 10px 10px 10px;\r\n  margin: 80px auto 35px auto;\r\n  width: 45%;\r\n  min-width: 350px;\r\n  max-width: 400px;\r\n`\r\n\r\nconst Card = ({todos, todoInput, sorter, setSorter, setTodoInput, handleTodoSubmit, handleTodoDelete, handlePriorityChange, handleDueDateChange, toggleCompleted}) => {  \r\n  return (\r\n    <StyledCard>\r\n      <CardHeading />\r\n      <CreateTodo \r\n        todoInput={todoInput}\r\n        setTodoInput={setTodoInput}\r\n        handleTodoSubmit={handleTodoSubmit}\r\n      />\r\n      <Sorter \r\n        sorter={sorter}\r\n        setSorter={setSorter}\r\n      />\r\n      <Todos \r\n        todos={todos}\r\n        sorter={sorter} \r\n        handleTodoDelete={handleTodoDelete}\r\n        handlePriorityChange={handlePriorityChange}\r\n        handleDueDateChange={handleDueDateChange}\r\n        toggleCompleted={toggleCompleted}\r\n      />\r\n      <CardFooter todos={todos} /> \r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useState, useEffect } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport Notification from './components/Notification'\r\nimport Card from './components/Card'\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([])\r\n  const [todoInput, setTodoInput] = useState('')\r\n  const [notification, setNotification] = useState('')\r\n  const [notificationTimerId, setNotificationTimerId] = useState('')\r\n  const [animateNotification, setAnimateNotification] = useState(false)\r\n  const [sorter, setSorter] = useState('priority')  \r\n\r\n  useEffect(() => { // effect to retrieve todos if they already exist in local storage \r\n    const todos = localStorage.getItem('todos')\r\n    if(todos && JSON.parse(todos) instanceof Array) {\r\n      setTodos(JSON.parse(todos))\r\n    } else {\r\n      localStorage.setItem('todos', JSON.stringify([]))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => { // effect to save todos to storage whenever a change is made \r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const handleTodoSubmit = event => {\r\n    event.preventDefault()\r\n    if(todoInput) {\r\n      setTodos(todos.concat({\r\n        id: uuid(),\r\n        task: todoInput,\r\n        dueDate: '09:00',\r\n        priority: 'low priority',\r\n        completed: false\r\n      })) \r\n      setTodoInput('')\r\n      flashNotification('successfully created todo!')\r\n    } else {\r\n      flashNotification('the todo field cannot be blank')\r\n    }\r\n  }\r\n\r\n  const handleTodoDelete = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n    flashNotification('successfully deleted todo!')\r\n  }\r\n\r\n  const handlePriorityChange = (id, priority) => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.priority = priority\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const handleDueDateChange = (id, dueDate) => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.dueDate = dueDate\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const toggleCompleted = id => {\r\n    const editedTodo = todos.find(todo => todo.id === id)\r\n    editedTodo.completed = !editedTodo.completed\r\n    setTodos(todos.map(todo => todo.id === id ? editedTodo : todo))\r\n  }\r\n\r\n  const flashNotification = notification => {\r\n    if(notificationTimerId) {\r\n      clearTimeout(notificationTimerId)\r\n    }\r\n    setNotification(notification)\r\n    setAnimateNotification(true)\r\n    const timerId = setTimeout(() => {\r\n      setNotification('')\r\n      setAnimateNotification(false)\r\n    }, 5000)\r\n    setNotificationTimerId(timerId)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification \r\n        notification={notification}\r\n        animateNotification={animateNotification}\r\n      />\r\n      <Card\r\n        todos={todos}\r\n        todoInput={todoInput}\r\n        sorter={sorter}\r\n        setSorter={setSorter}\r\n        setTodoInput={setTodoInput}\r\n        handleTodoSubmit={handleTodoSubmit}\r\n        handleTodoDelete={handleTodoDelete}\r\n        handlePriorityChange={handlePriorityChange}\r\n        handleDueDateChange={handleDueDateChange}\r\n        toggleCompleted={toggleCompleted}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}